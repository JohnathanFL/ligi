Current plan:
	Lexer/Parser/Evaluator/Interpreter in Nim
		Final Ligi language will be compiled, but this will work for a prototype/senior project
		Other languages considered:
			Zig: Too immature. I love it, but there are too many bugs for an official project
			Rust: Love it but it has its own way of doing things I haven't learned yet.
			C++: Still kinda love it, but it has too many little things I hate. I have other choices.
			Java: No. Perhaps for the GUI (to better leverage the GUIs class)
			C#: Considered, but I'm not too familiar with it.
			Python: Considered, but it feels like a lesser Nim now, and it's slooooow
			Nim: Lets me do things may way. Mature. Performant.
	GUI that allows the user to step through the interpreter
		Works in a client/server model. GUI sends a command when it wants the interpreter to step.
		Interpreter sends the new state to the GUI
	Evaluator serializes its final type database into SQLite
		This may stick around in the final Ligi. Seems useful
	

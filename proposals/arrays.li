-- Arrays be be declared with an explicit size
let sizedAr: array(10, usize) = undef
-- Or leaving the size to the compiler to determine
let unsizedAr: array usize = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
-- Array literals of the form [:type: el1, el2, ...], where the type is optional
let compoundInitArray = [:array usize: 0, 1, 2, 3, 4, 5 ,6, 7, 8, 9]

-- You can also directly make an array of multiple dimensions
let mat4x4: array((4, 4), f32) = [
  [1, 0, 0, 0],
  [0, 1, 0, 0],
  [0, 0, 1, 0],
  [0, 0, 0, 1]
]
-- ...same with the compound literal's type
let mat4x4 = [:array((4, 4), f32):
  [1, 0, 0, 0],
  [0, 1, 0, 0],
  [0, 0, 1, 0],
  [0, 0, 0, 1]
]
